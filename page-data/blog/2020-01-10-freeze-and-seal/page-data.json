{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/2020-01-10-freeze-and-seal","result":{"data":{"site":{"siteMetadata":{"title":"Miksin, Software Engineer","subtitles":["Hello! I am Miksin","I'm a Software Engineer","I'm Painting","I'm Programming","I come from TAIWAN"],"description":"Software Engineer","author":"Miksin","links":[{"name":"Home","path":"/"},{"name":"About","path":"/about"},{"name":"Blog","path":"/blog"}],"socialLinks":[{"name":"github","link":"https://github.com/miksin"},{"name":"twitter","link":"https://twitter.com/miksin_"},{"name":"instagram","link":"https://www.instagram.com/miksin_/"},{"name":"pixiv","link":"https://pixiv.me/miksin"},{"name":"youtube","link":"https://www.youtube.com/channel/UCmYleBoaTtNtPVZkaUwFxOw"}]}},"page":{"html":"<h2>前言</h2>\n<p>我們知道在 ES6 中，我們可以把變數宣告為常數<code class=\"language-text\">const</code>來使其不能被修改。\n但使用在物件上仍無法阻止其內部被改動。</p>\n<p>那如果我就是不想要一個物件包含內部成員被修改，有沒有辦法呢？\n答案是有的，我們可以視需求使用<code class=\"language-text\">Object.freeze</code>或是<code class=\"language-text\">Object.seal</code>來解決這個問題。</p>\n<h2>使用<code class=\"language-text\">Object.freeze</code>來保護物件</h2>\n<p>首先我們宣告一個常數物件<code class=\"language-text\">obj1</code>，且如前言所提到的，它的內部成員是能夠被修改的</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> d<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { a: 1, b: 2, c: { d: 3 } }</span>\nobj1<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { a: 4, b: 2, c: { d: 3 } }</span></code></pre></div>\n<p>這裡我們嘗試使用<code class=\"language-text\">Object.freeze</code>來「凍結」這個物件</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { a: 4, b: 2, c: { d: 3 } }</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">freeze</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span>\nobj1<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\nobj1<span class=\"token punctuation\">.</span>t <span class=\"token operator\">=</span> <span class=\"token number\">777</span>\n<span class=\"token keyword\">delete</span> obj1<span class=\"token punctuation\">.</span>b\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { a: 4, b: 2, c: { d: 3 } }</span></code></pre></div>\n<p>現在我們發現不管對是其既有的成員修改或是新增/刪除 key 都沒有用了。\n但是還是有一點需要注意的，如果進行深層修改的時候呢？</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">obj1<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> <span class=\"token number\">777</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { a: 4, b: 2, c: { d: 777 } }</span></code></pre></div>\n<p>我們會發現我們仍舊無法阻止深層修改，<code class=\"language-text\">Object.freeze</code>只會保護該物件自己本身所擁有的 key 而已。\n若我們想要將整個物件包含深層全部凍結住，則必須自行實作，以下是\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\">MDN</a>\n所提供的片段程式碼：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">deepFreeze</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">object</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Retrieve the property names defined on object</span>\n  <span class=\"token keyword\">var</span> propNames <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyNames</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Freeze properties before freezing self</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> name <span class=\"token keyword\">of</span> propNames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> object<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span>\n\n    object<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n      value <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span> <span class=\"token operator\">?</span> <span class=\"token function\">deepFreeze</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> value\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">freeze</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>使用<code class=\"language-text\">Object.seal</code>來保護物件</h2>\n<p>除了<code class=\"language-text\">Object.freeze</code>，javascript 還提供了另一個功能稍微不同的 API <code class=\"language-text\">Object.seal</code>。</p>\n<p>兩者的功能大致上相同，差別只在<strong>能不能對既有的 key 修改其內容</strong>：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> d<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { a: 1, b: 2, c: { d: 3 } }</span>\nobj2<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { a: 4, b: 2, c: { d: 3 } }</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">seal</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span>\nobj2<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\nobj2<span class=\"token punctuation\">.</span>t <span class=\"token operator\">=</span> <span class=\"token number\">777</span>\n<span class=\"token keyword\">delete</span> obj2<span class=\"token punctuation\">.</span>b\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { a: 5, b: 2, c: { d: 3 } }</span></code></pre></div>\n<p>我們做了與前面完全相同的操作，可以發現我們仍然無法變動 key 的數量，但卻可以對修改既有成員的數值了。</p>\n<p>當我們允許這個物件的內容被修改，卻不允許其結構本身發生變動的時候（例如資料庫的物件等），我們就可以使用這個 function。</p>\n<h2>檢驗物件是否遭到凍結</h2>\n<p>我們可以分別透過<code class=\"language-text\">Object.isFrozen</code>及<code class=\"language-text\">Object.isSealed</code>進行判別兩者，\n且可以從中得知<code class=\"language-text\">Object.seal</code>的結果被包含於<code class=\"language-text\">Object.freeze</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">isFrozen</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">isFrozen</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">isSealed</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">isSealed</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true true</span></code></pre></div>\n<h2>Conclusions</h2>\n<p><code class=\"language-text\">const</code>可以保護變數本身的 refence 不被修改。\n而<code class=\"language-text\">Object.freeze</code>與<code class=\"language-text\">Object.seal</code>可以在不同程度上保護物件本身不被修改。</p>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\">MDN: Object.freeze()</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\">MDN: Object.seal()</a></li>\n</ul>","frontmatter":{"date":"January 10, 2020","path":"/blog/2020-01-10-freeze-and-seal","title":"JS中使用Object.freeze與Object.seal凍結物件","tags":["javascript","programming"]}}},"pageContext":{"next":{"frontmatter":{"path":"/blog/2020-01-16-struggles-in-rails-1","title":"學習rails時所遇到的挫折們 - 其一"}},"prev":{"frontmatter":{"path":"/blog/2019-12-27-shell-array-and-loop","title":"Array and Loop in Shell Script"}}}},"staticQueryHashes":["63159454"]}