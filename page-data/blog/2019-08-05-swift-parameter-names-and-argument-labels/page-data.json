{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/2019-08-05-swift-parameter-names-and-argument-labels","result":{"data":{"site":{"siteMetadata":{"title":"Miksin","subtitles":["Hello! I am Miksin","I'm a Software Engineer","I'm Painting","I'm Programming","I come from TAIWAN"],"description":"Software Engineer","author":"Miksin","links":[{"name":"Home","path":"/"},{"name":"About","path":"/about"},{"name":"Blog","path":"/blog"},{"name":"Gallery","path":"/gallery"}],"socialLinks":[{"name":"github","link":"https://github.com/miksin"},{"name":"twitter","link":"https://twitter.com/miksin_"},{"name":"instagram","link":"https://www.instagram.com/miksin_/"},{"name":"pixiv","link":"https://pixiv.me/miksin"},{"name":"youtube","link":"https://www.youtube.com/channel/UCmYleBoaTtNtPVZkaUwFxOw"}]}},"page":{"html":"<h2>前言</h2>\n<p>最近剛開始學習Swift，在嘗試使用function時撞牆許久，才發現swift這有趣的設計。\nSwift可以讓function的內與外所使用的參數名區別開來，使用上不會非常麻煩，卻增加了可讀性。</p>\n<!-- more -->\n<hr>\n<h2>Argument Labels</h2>\n<p>我想在寫大部分程式語言時，我們都會宣告與呼叫function。\n而呼叫時傳進參數的值在呼叫時卻不容易看出用途，這在閱讀別人的程式碼時時常需要去找對應的definition。</p>\n<p>以javascript做個例子如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">start<span class=\"token punctuation\">,</span> end</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">from </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>start<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>end<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token string\">'home'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'school'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// from home to school</span></code></pre></div>\n<p>若是我們不清楚function的宣告，光從呼叫本身來看，我們並無法知道傳入的<code class=\"language-text\">&#39;home&#39;</code>與<code class=\"language-text\">&#39;school&#39;</code>是甚麼用途。\n畢竟function的呼叫也只是照順序傳參數進去。</p>\n<p>當然，儘管不是強制的，在javascript你是可以寫成這樣來解決這個問題：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">=</span> <span class=\"token string\">'home'</span><span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> <span class=\"token string\">'school'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// from home to school</span></code></pre></div>\n<p>不過這裡又有另一個問題了，對於使用這個function來說，寫成 <code class=\"language-text\">move(from, to)</code> 似乎比較符合它的意義吧。\n但是對這個function內部來說，這兩個參數還是<code class=\"language-text\">start</code>與<code class=\"language-text\">end</code>更加合適。\n能不能同時滿足這兩者呢？</p>\n<p>在Swift是可以的！Swift規定了給呼叫方使用，名為 <em>Argument Labels</em> 的功能。\n在定義function時，除了function內部使用的名稱外，還可以定義專門給呼叫方使用的另一組名稱。</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span>from start<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">,</span> to end<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">String</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"from <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>start<span class=\"token delimiter variable\">)</span></span> to `(end)\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">move</span><span class=\"token punctuation\">(</span>from<span class=\"token punctuation\">:</span> <span class=\"token string\">\"home\"</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">\"school\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>你覺得舒服多了.jpg</p>\n<p>不過有的時候其實光從function的名稱上就已經看得出用途，即使如此每次呼叫都還要寫argument labels的確是有點麻煩。\n這時候是能省略的，<a href=\"https://swift.org/documentation/api-design-guidelines/#argument-labels\">這裡</a>是官方提供的例子：</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>number1<span class=\"token punctuation\">,</span> number2<span class=\"token punctuation\">)</span>\n<span class=\"token function\">zip</span><span class=\"token punctuation\">(</span>sequence1<span class=\"token punctuation\">,</span> sequence2<span class=\"token punctuation\">)</span></code></pre></div>\n<p>像是這種類型的function確實就不需要加上argument labels了，而我們如果想要定義這種用法，只要在宣告function時，指定argument labels為 <code class=\"language-text\">_</code> 就可以了。</p>\n<p>例如<a href=\"https://developer.apple.com/documentation/swift/1538339-min/\">Standard Library</a>提供的：</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token builtin\">min</span><span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> x<span class=\"token punctuation\">:</span> T<span class=\"token punctuation\">,</span> <span class=\"token number\">_</span> y<span class=\"token punctuation\">:</span> T<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> T <span class=\"token keyword\">where</span> T <span class=\"token punctuation\">:</span> <span class=\"token builtin\">Comparable</span></code></pre></div>\n<p>以上是自己初學swift的一些筆記。</p>\n<hr>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://docs.swift.org/swift-book/LanguageGuide/Functions.html#ID166\">Swift Language Guide</a></li>\n<li><a href=\"https://swift.org/documentation/api-design-guidelines/#argument-labels\">Swift API Design Guidelines</a></li>\n<li><a href=\"https://developer.apple.com/documentation/swift\">Swift Standard Library</a></li>\n<li><a href=\"https://medium.com/@sodastsai/parameter-names-and-argument-labels-in-functions-of-swift-9c6b37a2af73\">Parameter Names and Argument Labels in functions of Swift - Tien-Che Tsai\n</a></li>\n</ul>","frontmatter":{"date":"August 05, 2019","path":"/blog/2019-08-05-swift-parameter-names-and-argument-labels","title":"Swift Function Argument Labels and Parameter Names","tags":["swift","programming"]}}},"pageContext":{"next":{"frontmatter":{"path":"/blog/2019-08-05-swift-on-windows-10","title":"Run Swift on Windows 10"}},"prev":{"frontmatter":{"path":"/blog/2019-06-09-js-prototype","title":"Javascript prototype 筆記 - 1"}}}},"staticQueryHashes":["63159454"]}