{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/2018-10-24-js-function-getter-setter","result":{"data":{"site":{"siteMetadata":{"title":"Miksin","subtitles":["Hello! I am Miksin","I'm a Software Engineer","I'm Painting","I'm Programming","I come from TAIWAN"],"description":"Software Engineer","author":"Miksin","links":[{"name":"Home","path":"/"},{"name":"About","path":"/about"},{"name":"Blog","path":"/blog"},{"name":"Gallery","path":"/gallery"}],"socialLinks":[{"name":"github","link":"https://github.com/miksin"},{"name":"twitter","link":"https://twitter.com/miksin_"},{"name":"instagram","link":"https://www.instagram.com/miksin_/"},{"name":"pixiv","link":"https://pixiv.me/miksin"},{"name":"youtube","link":"https://www.youtube.com/channel/UCmYleBoaTtNtPVZkaUwFxOw"}]}},"page":{"html":"<h3>function的命名空間</h3>\n<p>在javascript中，function也可以擁有自己的命名空間\n例如以下這段程式碼：</p>\n<!-- more -->\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'I am A'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>hello <span class=\"token operator\">=</span> <span class=\"token string\">'hello!'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>hello<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>我們可以在console得到以下內容：</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">I am A\nhello!</code></pre></div>\n<p>可以發現即使A被宣告成一個function，它依然可以像object一樣被assign其中的其他attribute，而直接呼叫A本身也還是它原來function的功能</p>\n<h3>getter、setter</h3>\n<p>在javascript中，this會是呼叫它的對象，可以參考<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this\">這裡</a>\n因此我們可以結合命名規則的特性寫成這個樣子</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">'john'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> Gender <span class=\"token operator\">=</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">f</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  f<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">Name</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> Name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    Name <span class=\"token operator\">=</span> _<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  f<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">Gender</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> Gender<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    Gender <span class=\"token operator\">=</span> _<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> f<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">Gender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>這裡我們在function A中定義了兩個變數Name, Gender\n然後分別使用A中的兩個function來作為存取他們的getter與setter\n若我們不傳任何參數給a.Name與a.Gender的話，將可透過他們得到A中的兩個local變數，因此這裡的console將會印出：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">john\nmale</code></pre></div>\n<p>而若我們有傳參數的話，例如這樣：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token string\">'alice'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">Gender</span><span class=\"token punctuation\">(</span><span class=\"token string\">'female'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Gender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>這兩個函數將會作為setter使用，並會回傳f以便繼續呼叫其他變數\n這是因為我們在這兩個function中回傳了this，因此我們又重新得到了呼叫他的物件f，故可以在console中得到：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">alice\nfemale</code></pre></div>\n<p>這裏我們看到可以將function作為一般命名空間使用，另外透過this也能實作getter、setter來存取這個命名空間中的變數</p>","frontmatter":{"date":"October 24, 2018","path":"/blog/2018-10-24-js-function-getter-setter","title":"javascript中的function命名空間與模擬getter、setter","tags":["javascript","programming"]}}},"pageContext":{"next":{"frontmatter":{"path":"/gallery/2018-12-25-bb","title":"水着BB"}},"prev":{"frontmatter":{"path":"/gallery/2018-06-23-teacher","title":"テストの結果...それとご褒美よ"}}}},"staticQueryHashes":["63159454"]}