{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/2019-12-21-git-rebase-squash","result":{"data":{"site":{"siteMetadata":{"title":"Miksin","subtitles":["Hello! I am Miksin","I'm a Software Engineer","I'm Painting","I'm Programming","I come from TAIWAN"],"description":"Software Engineer","author":"Miksin","links":[{"name":"Home","path":"/"},{"name":"About","path":"/about"},{"name":"Blog","path":"/blog"},{"name":"Gallery","path":"/gallery"}],"socialLinks":[{"name":"github","link":"https://github.com/miksin"},{"name":"twitter","link":"https://twitter.com/miksin_"},{"name":"instagram","link":"https://www.instagram.com/miksin_/"},{"name":"pixiv","link":"https://pixiv.me/miksin"},{"name":"youtube","link":"https://www.youtube.com/channel/UCmYleBoaTtNtPVZkaUwFxOw"}]}},"page":{"html":"<h2>前言</h2>\n<p>當我們想要修改以前的 commit，可以使用 rebase 指令來達成。這裡準備了簡單一個情境來說明</p>\n<h2>事前準備</h2>\n<p>現在資料夾中有兩個檔案，<em>a.txt</em>和<em>b.txt</em>。且我們分別在修改了這兩個檔案後都 commit 了一次，包含初次的 commit，我們一共有三個 commit。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> log --oneline\n27db2a2 <span class=\"token punctuation\">(</span>HEAD -<span class=\"token operator\">></span> master<span class=\"token punctuation\">)</span> edit b.txt\ne91d1f8 edit a.txt\n55703db a.txt <span class=\"token operator\">&amp;</span> b.txt</code></pre></div>\n<p>但我們不想要這麼多個 commit，想要把後面的兩次的修改改成同一次 commit</p>\n<h2>git rebase -i</h2>\n<p>這時我們可以使用<code class=\"language-text\">git rebase -i</code>這個指令來進入互動模式：</p>\n<div class=\"gatsby-highlight\" data-language=\"base\"><pre class=\"language-base\"><code class=\"language-base\">$ git rebase -i HEAD~2</code></pre></div>\n<p>我們想要修改最後的兩個 commit，所以在後面加上 HEAD~2。\n這時會跳出編輯器讓你編輯你想要修改的內容：</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\">pick e91d1f8 edit a.txt\npick 27db2a2 edit b.txt\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Rebase 55703db..27db2a2 onto 55703db (2 commands)</span>\n\n#\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Commands:</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> p, pick = use commit</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> r, reword = use commit, but edit the commit message</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> e, edit = use commit, but stop for amending</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> s, squash = use commit, but meld into previous commit</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> f, fixup = like \"squash\", but discard this commit's log message</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> x, exec = run command (the rest of the line) using shell</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> d, drop = remove commit</span>\n\n#\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> These lines can be re-ordered; they are executed from top to bottom.</span>\n\n#\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> If you remove a line here THAT COMMIT WILL BE LOST.</span>\n\n#\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> However, if you remove everything, the rebase will be aborted.</span>\n\n#\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Note that empty commits are commented out</span></code></pre></div>\n<p>在編輯器的註解中，親切的附上了註解，這裡我們只想保留一個 commit，並把另一個合併進去。\n因此我們選擇對後面的那一個 commit 使用<code class=\"language-text\">squash</code>(或是簡寫成<code class=\"language-text\">s</code>)。</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\">pick e91d1f8 edit a.txt\nsquash 27db2a2 edit b.txt\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Rebase 55703db..27db2a2 onto 55703db (2 commands)</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> ...</span></code></pre></div>\n<p>將<code class=\"language-text\">pick</code>改成<code class=\"language-text\">squash</code>後存檔離開，我們會發現馬上又跳出了一次編輯器：</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">#</span> This is a combination of 2 commits.</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> This is the 1st commit message:</span>\n\nedit a.txt\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> This is the commit message #2:</span>\n\nedit b.txt\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Please enter the commit message for your changes. Lines starting</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> with '#' will be ignored, and an empty message aborts the commit.</span>\n\n#\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Date: Sat Dec 21 21:33:32 2019 +0900</span>\n\n#\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> interactive rebase in progress; onto 55703db</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Last commands done (2 commands done):</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> pick e91d1f8 edit a.txt</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> squash 27db2a2 edit b.txt</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> No commands remaining.</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> You are currently rebasing branch 'master' on '55703db'.</span>\n\n#\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Changes to be committed:</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span>>--modified: a.txt</span>\n<span class=\"token title important\"><span class=\"token punctuation\">#</span>>--modified: b.txt</span></code></pre></div>\n<p>這時是讓我們可以重新編輯一次 commit 訊息，於是我們將 commit 訊息修改為編輯了兩個檔案</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">#</span> This is a combination of 2 commits.</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> This is the 1st commit message:</span>\n\nedit a.txt &amp; b.txt\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> This is the commit message #2:</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> edit b.txt</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Please enter the commit message for your changes. Lines starting</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> ...</span></code></pre></div>\n<p>這樣就修改完成了，我們再看看變成甚麼樣子了：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> log --oneline\n7e00372 <span class=\"token punctuation\">(</span>HEAD -<span class=\"token operator\">></span> master<span class=\"token punctuation\">)</span> edit a.txt <span class=\"token operator\">&amp;</span> b.txt\n55703db a.txt <span class=\"token operator\">&amp;</span> b.txt</code></pre></div>\n<p>commit 數從三個減少成兩個了！我們成功將這兩個 commit 合併成為了一個。\n且從 commit 的 HASH 值可以看出，這是一個全新產生的 commit。</p>\n<h2>修改遠端 commit</h2>\n<p>這時候可能還有另一個問題，如果我很不幸的其實已經將原本的 commit push 到 remote 了該怎麼辦呢？\n這時候別無他法，我們只能使用 force push 的方式來覆蓋遠端的存檔了。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> push origin +master</code></pre></div>\n<p><strong>但要注意！使用 force push 將可能影響到別人！</strong></p>\n<h2>同廠加映：git push 時<code class=\"language-text\">+</code>號與<code class=\"language-text\">--force</code>的差異</h2>\n<p>可以發現我在這裡的示範中使用了<code class=\"language-text\">+master</code>的方式，如果只有 push 這一條 branch 時，與下面這樣是完全一樣的：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> push --force origin master</code></pre></div>\n<p>但當你不只 push 一條 branch 時，使用<code class=\"language-text\">+</code>號讓你可以指定需要 force 的項目，例如：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> push origin master +develop</code></pre></div>\n<p>這個指令讓我們可以只針對 develop 使用 force push，而使用<code class=\"language-text\">--force</code>將會使全部 push 的 branch 都使用 force push。</p>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://github.com/wprig/wprig/wiki/How-to-squash-commits\">How to squash commits</a></li>\n<li><a href=\"https://gitbook.tw/chapters/rewrite-history/merge-multiple-commits-to-one-commit.html\">把多個 Commit 合併成一個 Commit</a></li>\n<li><a href=\"https://backlog.com/git-tutorial/tw/stepup/stepup7_5.html\">使用 rebase -i 合併提交</a></li>\n<li><a href=\"https://stackoverflow.com/questions/25937730/git-force-push-syntax-f-versus-branch\">Git Force push syntax, “-f” versus “+branch”\n</a></li>\n</ul>","frontmatter":{"date":"December 21, 2019","path":"/blog/2019-12-21-git-rebase-squash","title":"使用git rebase合併commit","tags":["git","programming"]}}},"pageContext":{"next":{"frontmatter":{"path":"/blog/2019-12-27-shell-array-and-loop","title":"Array and Loop in Shell Script"}},"prev":{"frontmatter":{"path":"/gallery/2019-12-03-yotsuba","title":"ずっと見てくれて、ありがとう"}}}},"staticQueryHashes":["63159454"]}