{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/404.js"],"names":["Header","siteTitle","siteDescription","banner","links","socialLinks","pathname","className","style","backgroundImage","src","backgroundSize","backgroundPosition","map","l","key","name","href","link","target","icon","alt","i","to","path","defaultProps","LayoutContext","createContext","windowSize","width","height","Layout","children","location","data","useStaticQuery","useState","setWindowSize","detector","setDetector","useEffect","window","innerWidth","innerHeight","setInterval","newSize","clearInterval","site","siteMetadata","title","description","fluid","childImageSharp","icons","github","githubIcon","pixiv","pixivIcon","twitter","twitterIcon","Provider","value","NotFoundPage"],"mappings":"uIAIMA,EAAS,SAAC,GAAD,IACbC,EADa,EACbA,UACAC,EAFa,EAEbA,gBACAC,EAHa,EAGbA,OACAC,EAJa,EAIbA,MACAC,EALa,EAKbA,YACAC,EANa,EAMbA,SANa,OAQb,oCACE,gCACE,yBACEC,UAAU,aACVC,MAAO,CACLC,gBAAgB,OAAQN,EAAOO,IAAhB,IACfC,eAAgB,QAChBC,mBAAoB,YAGxB,yBAAKL,UAAU,kBACb,yBAAKA,UAAU,gBACb,4BAAKN,GACL,4BAAKC,IAEP,yBAAKK,UAAU,sBAEXF,EAAYQ,KAAI,SAAAC,GAAC,OACf,yBAAKC,IAAKD,EAAEE,MACV,uBAAGC,KAAMH,EAAEI,KAAMC,OAAO,WACtB,yBAAKT,IAAKI,EAAEM,KAAMC,IAAKP,EAAEE,eAQvC,yBAAKT,UAAU,WACb,yBAAKA,UAAU,cAEXH,EAAMS,KAAI,SAACK,EAAMI,GAAP,OACR,kBAAC,WAAD,CAAUP,IAAKG,EAAKF,MACjBM,EAAI,EAAJ,MAAgB,KACjB,kBAAC,OAAD,CACEC,GAAIL,EAAKM,KACTjB,UAAWW,EAAKM,OAASlB,EAAW,SAAW,IAE7CY,EAAKF,cA6BvBhB,EAAOyB,aAAe,CACpBxB,UAAU,GACVC,gBAAgB,GAChBE,MAAO,CACL,CAAEoB,KAAM,IAAKR,KAAM,QACnB,CAAEQ,KAAM,SAAUR,KAAM,SACxB,CAAEQ,KAAM,QAASR,KAAM,QACvB,CAAEQ,KAAM,WAAYR,KAAM,YAE5BX,YAAa,IAGAL,QCpFF0B,EAAgBC,wBAAc,CACzCC,WAAY,CACVC,MAAO,EACPC,OAAQ,KAINC,EAAS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACpBC,EAAOC,yBAAe,cADa,EAmDLC,mBAAS,CAC3CP,MAAO,EACPC,OAAQ,IAFHF,EAnDkC,KAmDtBS,EAnDsB,OAuDTD,qBAAzBE,EAvDkC,KAuDxBC,EAvDwB,KAyDzCC,qBAAU,WAeR,OAdAH,EAAc,CACZR,MAAOY,OAAOC,WACdZ,OAAQW,OAAOE,cAGjBJ,EAAYK,aAAY,WACtB,IAAMC,EAAU,CACdhB,MAAOY,OAAOC,WACdZ,OAAQW,OAAOE,aAEbf,EAAWC,QAAUgB,EAAQhB,OAASD,EAAWE,SAAWe,EAAQf,QACtEO,EAAcQ,KAEf,MACI,WACLC,cAAcR,MAEf,IA3EsC,MA6EVJ,EAAKa,KAAKC,aAAjCC,EA7EiC,EA6EjCA,MAAOC,EA7E0B,EA6E1BA,YACPC,EAAUjB,EAAK/B,OAAOiD,gBAAtBD,MACFE,EAAQ,CACZC,OAAQpB,EAAKqB,WAAWH,gBAAgBD,MAAMzC,IAC9C8C,MAAOtB,EAAKuB,UAAUL,gBAAgBD,MAAMzC,IAC5CgD,QAASxB,EAAKyB,YAAYP,gBAAgBD,MAAMzC,KAE5CN,EAAQ8B,EAAKa,KAAKC,aAAa3C,YAAYQ,KAAI,SAAAC,GAAC,wBACjDA,EADiD,CAEpDM,KAAMiC,EAAMvC,EAAEE,WAGhB,OACE,kBAACU,EAAckC,SAAf,CAAwBC,MAAO,CAAEjC,eAC/B,yBAAKrB,UAAU,oBACb,kBAAC,EAAD,CACEN,UAAWgD,EACX/C,gBAAiBgD,EACjB/C,OAAQgD,EACR7C,SAAU2B,EAAS3B,SACnBD,YAAaD,IAEf,8BAAO4B,MAafD,EAAON,aAAe,CACpBQ,SAAU,CACR3B,SAAU,KAICyB,Q,YCvHA+B,UARM,kBACnB,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAKb,MAAM,mBACX,yCACA","file":"component---src-pages-404-js-c5713cc239e7114fe6a5.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React, { Fragment } from \"react\"\n\nconst Header = ({\n  siteTitle,\n  siteDescription,\n  banner,\n  links,\n  socialLinks,\n  pathname,\n}) => (\n  <>\n    <header>\n      <div\n        className=\"background\"\n        style={{\n          backgroundImage: `url(${banner.src})`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n        }}\n      />\n      <div className=\"header-wrapper\">\n        <div className=\"header-title\">\n          <h1>{siteTitle}</h1>\n          <h3>{siteDescription}</h3>\n        </div>\n        <div className=\"social-links plane\">\n          {\n            socialLinks.map(l => (\n              <div key={l.name}>\n                <a href={l.link} target=\"__blank\">\n                  <img src={l.icon} alt={l.name} />\n                </a>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    </header>\n    <div className=\"fix-nav\">\n      <nav className=\"header-nav\">\n        {\n          links.map((link, i) => (\n            <Fragment key={link.name}>\n              {i > 0 ? ` | ` : null}\n              <Link\n                to={link.path}\n                className={link.path === pathname ? 'active' : ''}\n              >\n                { link.name }\n              </Link>\n            </Fragment>\n          ))\n        }\n      </nav>\n    </div>\n  </>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  siteDescription: PropTypes.string,\n  banner: PropTypes.shape({\n    src: PropTypes.string.isRequired,\n    aspectRatio: PropTypes.number,\n  }).isRequired,\n  links: PropTypes.arrayOf(PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })),\n  socialLinks: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n  })),\n  pathname: PropTypes.string.isRequired,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  siteDescription: ``,\n  links: [\n    { path: '/', name: 'Home' },\n    { path: '/about', name: 'About' },\n    { path: '/blog', name: 'Blog' },\n    { path: '/gallery', name: 'Gallery' },\n  ],\n  socialLinks: [],\n}\n\nexport default Header\n","/* eslint-disable no-undef */\nimport React, { createContext, useState, useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n\nexport const LayoutContext = createContext({\n  windowSize: {\n    width: 0,\n    height: 0,\n  },\n})\n\nconst Layout = ({ children, location }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n          socialLinks {\n            name\n            link\n          }\n        }\n      }\n\n      banner: file(relativePath: {eq: \"banner_1.jpg\"}){\n        childImageSharp {\n          fluid {\n            src\n            aspectRatio\n          }\n        }\n      }\n\n      githubIcon: file(relativePath: {eq: \"github-icon.png\"}){\n        childImageSharp {\n          fluid(maxWidth: 32) {\n            src\n          }\n        }\n      }\n\n      pixivIcon: file(relativePath: {eq: \"pixiv-icon.png\"}){\n        childImageSharp {\n          fluid(maxWidth: 32) {\n            src\n          }\n        }\n      }\n\n      twitterIcon: file(relativePath: {eq: \"twitter-icon.png\"}){\n        childImageSharp {\n          fluid(maxWidth: 32) {\n            src\n          }\n        }\n      }\n    }\n  `)\n\n  // detect window size\n  const [windowSize, setWindowSize] = useState({\n    width: 0,\n    height: 0,\n  })\n  const [detector, setDetector] = useState()\n\n  useEffect(() => {\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    })\n\n    setDetector(setInterval(() => {\n      const newSize = {\n        width: window.innerWidth,\n        height: window.innerHeight\n      }\n      if (windowSize.width !== newSize.width || windowSize.height !== newSize.height) {\n        setWindowSize(newSize)\n      }\n    }, 1000))\n    return () => {\n      clearInterval(detector)\n    }\n  }, [])\n\n  const { title, description } = data.site.siteMetadata\n  const { fluid } = data.banner.childImageSharp\n  const icons = {\n    github: data.githubIcon.childImageSharp.fluid.src,\n    pixiv: data.pixivIcon.childImageSharp.fluid.src,\n    twitter: data.twitterIcon.childImageSharp.fluid.src,\n  }\n  const links = data.site.siteMetadata.socialLinks.map(l => ({\n    ...l,\n    icon: icons[l.name]\n  }))\n\n  return (\n    <LayoutContext.Provider value={{ windowSize }}>\n      <div className=\"layout-container\">\n        <Header\n          siteTitle={title}\n          siteDescription={description}\n          banner={fluid}\n          pathname={location.pathname}\n          socialLinks={links}\n        />\n        <main>{children}</main>\n      </div>\n    </LayoutContext.Provider>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n}\n\nLayout.defaultProps = {\n  location: {\n    pathname: '',\n  }\n}\n\nexport default Layout\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}